name: "CI/CD: Frontend → Hosting • Backend → Cloud Run"

on:
  push:
    branches: [ main ]

env:
  FIREBASE_PROJECT_ID: prizepicksproject-15337

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Install & build your React app
      - name: Build React app
        working-directory: frontEnd
        run: |
          npm ci
          npm run build

      # Deploy only the Hosting portion
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.GCP_SA_KEY }}"
          channelId: live

      # Set up GCP for Cloud Run
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id:       ${{ secrets.FIREBASE_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP registries
        run: |
          # for legacy Container Registry (gcr.io)
          gcloud auth configure-docker --quiet
          # if you’re using Artifact Registry on us-west2:
          # gcloud auth configure-docker us-west2-docker.pkg.dev --quiet

      # Build & push your Flask Docker image
      - name: Build & Push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.FIREBASE_PROJECT_ID }}/prizepicks-backend:$GITHUB_SHA backEnd
          docker push     gcr.io/${{ secrets.FIREBASE_PROJECT_ID }}/prizepicks-backend:$GITHUB_SHA

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy prizepicks-backend \
            --image gcr.io/${{ secrets.FIREBASE_PROJECT_ID }}/prizepicks-backend:$GITHUB_SHA \
            --region us-west2 \
            --platform managed \
            --quiet
